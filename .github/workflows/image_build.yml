name: Build image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
env:
  REGISTRY: docker.io
  BASE_IMAGE_NAME: kubebb/component-store-base
  BASE_PRO_IMAGE_NAME: kubebb/component-store-base-prod
  IMAGE_NAME: kubebb/component-store
  DOCKER_USER: kubebb

jobs:
  image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            package:
              - 'package.json'
              - 'pnpm-lock.yaml'
              - '.npmrc'
              - '.pnpmfile.cjs'
              - 'packages/**/package.json'
      - name: Set Variable
        id: set-env
        run: |
          TAG=$(git describe --tags --abbrev=0 --match 'v*' 2> /dev/null) || true
          if [ -z "$TAG" ]; then
            echo "No tag found, use v0.1.0 as default"
            TAG=v0.1.0
          fi
          echo "TAG=${TAG}" >> $GITHUB_OUTPUT
          echo "DATE=$(TZ=Asia/Shanghai date + '%Y%m%d')" >> $GITHUB_OUTPUT
      - name: Show Variable
        run: echo "varibables ${{ steps.set-env.outputs.TAG }}-${{ steps.set-env.outputs.DATE }}"
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
          config-inline: |
            [worker.oci]
              max-parallelism = 1
      - name: Login to the dockerhub Registry
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - uses: benjlevesque/short-sha@v2.1
        name: Get short commit sha
        id: short-sha
      - name: setting token to npmrc
        run: |
          echo '//dev-npm.k8s.com.cn/:_authToken="${{ secrets.NPMTOKEN }}"' > /tmp/npmrc
      - name: Build and push base image
        id: base-build-push
        if: steps.changes.outputs.package == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: base.dockerfile
          platform: linux/amd64
          tags: |
            ${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}:main
          push: true
          secret-files: |
            "npmrc=/tmp/npmrc"
      - name: Build and push base pro image
        id: base-pro-build-push
        if: steps.changes.outputs.package == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: pro.dockerfile
          platform: linux/amd64
          tags: |
            ${{ env.REGISTRY }}/${{ env.BASE_PRO_IMAGE_NAME }}:main
          push: true
          secret-files: |
            "npmrc=/tmp/npmrc"
      - name: Build and push
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.set-env.outputs.TAG }}-${{ steps.set-env.outputs.DATE }}-${{ steps.short-sha.outputs.sha }}
            ${{ steps.meta.outputs.tags }}
          push: true
          build-args: |
            BUILD_ID=${{ env.SEMREV_LABEL }}
            BUILD_DATE=${{ env.BUILD_DATE }}
          secret-files: |
            "npmrc=/tmp/npmrc"
