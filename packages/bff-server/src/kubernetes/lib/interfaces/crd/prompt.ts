/**
 * 由 src/kubernetes/gen/index.ts 自动生成
 * !!! 请不要修改 !!!
 */
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Prompt is the Schema for the prompts API
 */
export interface Prompt {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  metadata?: {
    [k: string]: any;
  };
  /**
   * PromptSpec defines the desired state of Prompt
   */
  spec?: {
    /**
     * LLM serivice name(CRD LLM)
     */
    llm: {
      /**
       * APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
       */
      apiGroup?: string;
      /**
       * Kind is the type of resource being referenced
       */
      kind: string;
      /**
       * Name is the name of resource being referenced
       */
      name: string;
      /**
       * Namespace is the namespace of resource being referenced
       */
      namespace?: string;
      [k: string]: any;
    };
    /**
     * ZhiPuAIParams defines the params of ZhiPuAI
     */
    zhiPuAIParams?: {
      /**
       * Incremental is only Used for SSE Invoke
       */
      incremental?: boolean;
      /**
       * Method used for this prompt call
       */
      method?: string;
      /**
       * Model used for this prompt call
       */
      model?: string;
      /**
       * Contents
       */
      prompt: {
        content?: string;
        role?: string;
        [k: string]: any;
      }[];
      /**
       * TaskID is used for getting result of AsyncInvoke
       */
      task_id?: string;
      /**
       * Temperature is float in zhipuai
       */
      temperature?: number;
      /**
       * TopP is float in zhipuai
       */
      top_p?: number;
      [k: string]: any;
    };
    [k: string]: any;
  };
  /**
   * PromptStatus defines the observed state of Prompt
   */
  status?: {
    /**
     * Conditions of the resource.
     */
    conditions?: {
      /**
       * LastSuccessfulTime is repository Last Successful Update Time
       */
      lastSuccessfulTime?: string;
      /**
       * LastTransitionTime is the last time this condition transitioned from one status to another.
       */
      lastTransitionTime: string;
      /**
       * A Message containing details about this condition's last transition from one status to another, if any.
       */
      message?: string;
      /**
       * A Reason for this condition's last transition from one status to another.
       */
      reason: string;
      /**
       * Status of this condition; is it currently True, False, or Unknown
       */
      status: string;
      /**
       * Type of this condition. At most one of each condition type may apply to a resource at any point in time.
       */
      type: string;
      [k: string]: any;
    }[];
    /**
     * Data retrieved after LLM Call
     */
    data: string;
    [k: string]: any;
  };
  [k: string]: any;
}
