# 「安装组件」列表（分页）
query getComponentplansPaged($namespace: String!, $page: Float = 1, $pageSize: Float = 20, $releaseName: String, $sortDirection: SortDirection, $sortField: String, $cluster: String, $chartName: String, $repository: String, $status: [String!], $isNewer: Boolean) {
  componentplansPaged(namespace: $namespace, page: $page, pageSize: $pageSize, releaseName: $releaseName, sortDirection: $sortDirection, sortField: $sortField, cluster: $cluster, chartName: $chartName, repository: $repository, status: $status, isNewer: $isNewer) {
    nodes {
      name
      releaseName
      creationTimestamp
      namespace
      version
      status
      reason
      component {
        name
        chartName
        latestVersion
        repository
        isNewer
      }
      subscription {
        componentPlanInstallMethod
      }
    }
    hasNextPage
    totalCount
  }
}

# 安装组件列表
query getComponentplans($namespace: String!, $releaseName: String, $cluster: String) {
  componentplans(namespace: $namespace, releaseName: $releaseName,cluster: $cluster) {
      name
      releaseName
  }
}

# 「安装组件」详情
query getComponentplan($name: String!, $namespace: String!, $cluster: String) {
  componentplan(name: $name, namespace: $namespace, cluster: $cluster) {
    name
    releaseName
    creationTimestamp
    namespace
    version
    status
    images {
      name
      newName
      newTag
    }
    component {
      chartName
      latestVersion
      repository
      versions{
        version
        deprecated
      }
    }
    subscription {
      componentPlanInstallMethod
      schedule
    }
    repository {
      imageOverride {
        registry
        newRegistry
        path
        newPath
      }
    }
    valuesYaml
  }
}

# 「安装组件」详情-历史版本列表
query getComponentplanHistory($name: String!, $namespace: String!, $cluster: String) {
  componentplan(name: $name, namespace: $namespace, cluster: $cluster) {
    namespace
    status
    releaseName
    component {
      chartName
    }
    history {
      name
      creationTimestamp
      version
      subscription {
        componentPlanInstallMethod
        schedule
      }
    }
  }
}

# 创建「安装组件」
mutation createComponentplan($namespace: String!, $componentplan: CreateComponentplanInput!, $cluster: String){
  componentplanCreate(namespace: $namespace, componentplan: $componentplan, cluster: $cluster)
}

# 更新「安装组件」
mutation updateComponentplan($name: String!, $namespace: String!, $componentplan: UpdateComponentplanInput!, $cluster: String){
  componentplanUpdate(name: $name, namespace: $namespace, componentplan: $componentplan, cluster: $cluster)
}

# 删除「安装组件」
mutation deleteComponentplan($name: String!, $namespace: String!, $cluster: String){
  componentplanRemove(name: $name, namespace: $namespace, cluster: $cluster)
}

# 回滚「安装组件」
mutation rollbackComponentplan($name: String!, $namespace: String!, $cluster: String){
  componentplanRollback(name: $name, namespace: $namespace, cluster: $cluster)
}
